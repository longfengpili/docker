x-postgres-user: &postgres-user longfengpili
x-postgres-password: &postgres-password 123456abc

x-openmetadata-db: &openmetadata-db openmetadata_db
x-openmetadata-user: &openmetadata-user test_openmetadata_user
x-openmetadata-password: &openmetadata-password test_openmetadata_password

x-airflow-db: &airflow-db airflow_db
x-airflow-user: &airflow-user test_airflow_user
x-airflow-password: &airflow-password test_airflow_password

x-openmetadata-admin-principals: &openmetadata-admin-principals [longfengpili]
x-openmetadata-domain: &openmetadata-domain sincetimes.com
x-openmetadata-enforce-domain: &openmetadata-enforce-domain true
x-openmetadata-bot-principals: &openmetadata-bot-principals [sincetimes-bot]

x-airflow-admin-user: &airflow-admin-user longfengpili
x-airflow-admin-password: &airflow-admin-password 123456abc

services:
  postgresql:
    environment:
      POSTGRES_USER: *postgres-user
      POSTGRES_PASSWORD: *postgres-password
      OPENMETADATA_DB: *openmetadata-db
      OPENMETADATA_USER: *openmetadata-user
      OPENMETADATA_PASSWORD: *openmetadata-password
      AIRFLOW_DB: *airflow-db
      AIRFLOW_USER: *airflow-user
      AIRFLOW_PASSWORD: *airflow-password
    healthcheck:
      test: psql -U longfengpili -tAc 'select 1' -d openmetadata_db
      interval: 15s
      timeout: 10s
      retries: 10
    volumes:
      - db:/var/lib/postgresql/data
      - dbinit:/docker-entrypoint-initdb.d

  execute-migrate-all:
    environment:
      # OpenMetadata Server Authentication Configuration
      AUTHORIZER_ADMIN_PRINCIPALS: *openmetadata-admin-principals
      AUTHORIZER_PRINCIPAL_DOMAIN: *openmetadata-domain
      AUTHORIZER_ENFORCE_PRINCIPAL_DOMAIN: *openmetadata-enforce-domain
      AUTHORIZER_INGESTION_PRINCIPALS: *openmetadata-bot-principals

      # Database configuration for postgresql
      DB_USER: *openmetadata-user
      DB_USER_PASSWORD: *openmetadata-password

      #airflow parameters
      AIRFLOW_USERNAME: *airflow-admin-user
      AIRFLOW_PASSWORD: *airflow-admin-password

  openmetadata-server:
    environment:
      # OpenMetadata Server Authentication Configuration
      AUTHORIZER_ADMIN_PRINCIPALS: *openmetadata-admin-principals
      AUTHORIZER_PRINCIPAL_DOMAIN: *openmetadata-domain
      AUTHORIZER_ENFORCE_PRINCIPAL_DOMAIN: *openmetadata-enforce-domain
      AUTHORIZER_INGESTION_PRINCIPALS: *openmetadata-bot-principals

      # Database configuration for postgresql
      DB_USER: *openmetadata-user
      DB_USER_PASSWORD: *openmetadata-password
      
      #airflow parameters
      AIRFLOW_USERNAME: *airflow-admin-user
      AIRFLOW_PASSWORD: *airflow-admin-password

  ingestion:
    environment:
      DB_USER: *airflow-user
      DB_PASSWORD: *airflow-password
      AIRFLOW_ADMIN_USER: *airflow-admin-user
      AIRFLOW_ADMIN_PASSWORD: *airflow-admin-password
    volumes:
      - ingestion-python-metadata:/home/airflow/.local/lib/python3.10/site-packages/metadata
      - ingestion-python-pydantic:/home/airflow/.local/lib/python3.10/site-packages/pydantic
      - ingestion-python-gunicorn:/home/airflow/.local/lib/python3.10/site-packages/gunicorn


volumes:
  ingestion-volume-dag-airflow:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/airflow/dag_generated_configs
  ingestion-volume-dags:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/airflow/dags
  ingestion-volume-tmp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/tmp
  es-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/elasticsearch
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/postgresql
  dbinit:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/postgresql/docker-entrypoint-initdb.d
  ingestion-python-metadata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/metadata
  ingestion-python-gunicorn:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/gunicorn
  ingestion-python-pydantic:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/python/pydantic

