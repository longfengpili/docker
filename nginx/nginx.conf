user  root; #Nginx用户及组：用户 组。window下不指定。
worker_processes  1; #工作进程：数目。根据硬件调整，通常等于CPU数量或者2倍于CPU。

#错误日志：存放路径。
error_log  /var/log/nginx/error.log warn;
#pid（进程标识符）：存放路径。
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;   #没个工作进程的最大连接数量。
}


http {
    include       /etc/nginx/mime.types;    #设定mime类型,类型由mime.type文件定义
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #日志格式设置。
    #$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；
    #$remote_user：用来记录客户端用户名称；
    #$time_local： 用来记录访问时间与时区；
    #$request： 用来记录请求的url与http协议；
    #$status： 用来记录请求状态；成功是200，
    #$body_bytes_sent ：记录发送给客户端文件主体内容大小；
    #$http_referer：用来记录从那个页面链接访问过来的；
    #$http_user_agent：记录客户浏览器的相关信息；
    #通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_addr拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。

    access_log  /var/log/nginx/access.log  main; #用了log_format指令设置了日志格式之后，需要用access_log指令指定日志文件的存放路径；

    sendfile        on; #sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。
    #tcp_nopush     on; #此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用

    keepalive_timeout  65;  #keepalive超时时间。

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}